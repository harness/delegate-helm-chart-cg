apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.delegateName }}-configmap
  namespace: {{ .Values.namespace }}
data:
  ACCOUNT_ID: {{ required "A valid .Values.accountId entry required!" .Values.accountId }}
  {{- if .Values.accountSecret }}
  ACCOUNT_SECRET: {{ .Values.accountSecret }}
  {{- end }}
  {{- if .Values.delegateToken }}
  DELEGATE_TOKEN: {{ .Values.delegateToken }}
  {{- end }}
  MANAGER_HOST_AND_PORT : {{ .Values.managerHostAndPort }}
  WATCHER_STORAGE_URL: {{ .Values.watcherStorageUrl }}
  WATCHER_CHECK_LOCATION: {{ .Values.watcherCheckLocation }}
  REMOTE_WATCHER_URL_CDN: {{ .Values.remoteWatcherUrlCdn | quote }}
  DELEGATE_STORAGE_URL: {{ .Values.delegateStorageUrl }}
  DELEGATE_CHECK_LOCATION: {{ .Values.delegateCheckLocation }}
  DEPLOY_MODE: {{ .Values.deployMode }}
  DELEGATE_NAME: {{ .Values.delegateName | quote }}
  DELEGATE_PROFILE: {{ .Values.delegateProfile | quote }}
  PROXY_HOST: {{ .Values.proxyHost | quote }}
  PROXY_PORT: {{ .Values.proxyPort | quote }}
  PROXY_SCHEME: {{ .Values.proxyScheme | quote }}
  NO_PROXY: {{ .Values.noProxy | quote }}
  PROXY_MANAGER: {{ .Values.proxyManager | quote }}
  POLL_FOR_TASKS: {{ .Values.pollForTasks | quote }}
  HELM_DESIRED_VERSION: {{ .Values.helmDesiredVersion | quote }}
  USE_CDN: {{ .Values.useCdn | quote }}
  CDN_URL: {{ .Values.cdnUrl | quote }}
  JRE_VERSION: {{ .Values.jreVersion | quote }}
  HELM3_PATH: {{ .Values.helm3Path | quote }}
  HELM_PATH: {{ .Values.helmPath | quote }}
  KUSTOMIZE_PATH: {{ .Values.kustomizePath | quote }}
  OC_PATH: {{ .Values.ocPath | quote }}
  KUBECTL_PATH: {{ .Values.kubectlPath | quote }}
  INSTALL_CLIENT_TOOLS_IN_BACKGROUND: {{ .Values.installClientToolsInBackground | quote }}
---

apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.delegateName }}-secret
  namespace: {{ .Values.namespace }}
type: Opaque
data:
  # Enter base64 encoded username and password, if needed
  PROXY_USER: {{ .Values.proxyUser | quote }}
  PROXY_PASSWORD: {{ .Values.proxyPassword | quote }}
---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    harness.io/name: {{ .Values.delegateName }}
  name: {{ .Values.delegateName }}-{{ required "A valid .Values.accountIdShort entry required!" .Values.accountIdShort }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      harness.io/name: {{ .Values.delegateName }}
  serviceName: ""
  template:
    metadata:
      labels:
        harness.io/name: {{ .Values.delegateName }}
    spec:
      containers:
      - image: {{ .Values.delegateDockerImage }}
        imagePullPolicy: Always
        name: harness-delegate-instance
        resources:
          limits:
            memory: "8Gi"
          requests:
            cpu: "1"
        envFrom:
        - configMapRef:
            name: {{ .Values.delegateName }}-configmap
        - secretRef:
            name: {{ .Values.delegateName }}-secret
      restartPolicy: Always

